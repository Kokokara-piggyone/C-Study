//N: 统计单词数
/*
题目描述 
一般的文本编辑器都有查找单词的功能，该功能能快速定位特定单词在文章中的位置，有的还能统计出特定单词在文章中出现的次数。 
现在，请你编程实现这一功能，具体要求是：给定一个单词，请你输出它在某篇文章中出现的次数和第一次出现的位置。注意：匹配单词时，不区分大小写，但要求完全匹配，即给定单词必须与文章中的某一独立单词完全相同（参见样例1），如果给定单词仅是文章中某一单词的一部分则不算匹配（参见样例2）。 
输入 
输入数据为2行。 
       第1行为一个字符串，其中只含字母，表示给定单词； 
       第2行为一个字符串，其中只可能包含字母和空格，表示给定的文章。 
输出 
输出只有一行，如果在文章中找到给定单词则输出两个整数，两个整数之间用一个空格隔开，分别是单词在文章中出现的次数和第一次出现的位置（即在文章中第一次出现时，单词首字母在文章中位置，位置从0开始）；如果单词在文章中没有出现，则直接输出一个整数-1。 
样例输入 Copy 
To
to be or not to be is a question
样例输出 Copy 
2 0
提示 
【输入输出样例2】 
输入 
输出 
to 
Did theOttoman Empirelose its power at that time 
  
-1 
  
 【数据范围】 
1<=单词长度<=50。 
1<=文章长度<=1,000,000。
*

#include<stdio.h>
#include<string.h>

int main()
{
	char a[50],b[1000000];
	int i,sym,n=0,j,t=0,k,loc;
	gets(a);
	gets(b);
	//一个独立的单词，结束后为空格：在ab后各加一个" "，减小配对的难度
	strcat(a," ");
	strcat(b," ");
	//统一ab的大小写
	for(i=0;a[i];i++)
		if(a[i]>='a')
			a[i]-='a'-'A';
	for(i=0;b[i];i++)
		if(b[i]>='a')
			b[i]-='a'-'A'; 
	//用sym(symbol)来记录各个位能否对应，如果结果是1就正确，一位不对sym就变成0
	for(i=0;b[i];i++)
	{
		//一个独立的单词，开始前为空格 
		if(b[i]==' ')
		{
			sym=1;
			for(j=n,k=0;j<=i,a[k];j++,k++)
				if(b[j]==a[k])
					sym*=1;
				else
					sym*=0;	
			if(sym==1)
				t++;
			if(t==1&&sym==1)
				loc=n; //记录第一次符合的位数
			n=i;
			n++;
		}
	}
	if(t==0)	
		printf("-1\n");	
	else if(t>=1)
		printf("%d %d\n",t,loc);
	return 0;
}

/*
while(gets(a)!=NULL)
{
    ——————
}
键入 CTRL+Z退出输入




